name: GitHub Actions
on:
  push:
    branches:
      - "main"

env:
  VENUS_HOME: /home/alma

jobs:
  build:
    runs-on: jupiter
    steps:
      - name: rm old files(for remove files root user created)
        run: |
          sudo rm -rf ./.gradle
          sudo rm -rf ./build

      - name: checkout
        uses: actions/checkout@v4

      - name: build jar
        run: |
          docker compose -f ./docker-compose.ci.yml up -d java
          docker compose exec java ./gradlew bootJar
          tar cvfz ./build.tgz ./build/

      - name: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: build.tgz
          path: build.tgz

      - name: docker compose teardown
        run: |
          docker compose down
        if: ${{ always() }}

  stop-server:
    runs-on: jupiter
    needs: build
    steps:
      - name: stop birdseyeapi
        run: |
          ssh $VENUS_SSH_HOST docker compose -f $VENUS_HOME/birdseyeapi/docker-compose.yml down
        env:
          VENUS_SSH_HOST: ${{ secrets.VENUS_SSH_HOST }}

  deploy:
    runs-on: jupiter
    needs: stop-server
    steps:
      - name: rm old files(for remove files root user created)
        run: |
          sudo rm -rf ./.gradle
          sudo rm -rf ./build

      - name: checkout
        uses: actions/checkout@v4

      - name: download-artifact
        uses: actions/download-artifact@v3
        with:
          name: build.tgz

      - name: scp files to venus
        run: |
          scp ./build.tgz $VENUS_SSH_HOST:$VENUS_HOME/birdseyeapi/build.tgz
          ssh $VENUS_SSH_HOST tar xvfz $VENUS_HOME/birdseyeapi/build.tgz -C $VENUS_HOME/birdseyeapi

          scp ./docker-compose.yml $VENUS_SSH_HOST:$VENUS_HOME/birdseyeapi/docker-compose.yml
          scp ./execute-jar.sh $VENUS_SSH_HOST:$VENUS_HOME/birdseyeapi/execute-jar.sh
          scp ./java-entrypoint.sh $VENUS_SSH_HOST:$VENUS_HOME/birdseyeapi/java-entrypoint.sh
          scp -r ./nginx $VENUS_SSH_HOST:$VENUS_HOME/birdseyeapi/
        env:
          VENUS_SSH_HOST: ${{ secrets.VENUS_SSH_HOST }}

  start-server:
    runs-on: jupiter
    needs: deploy
    steps:
      - name: start birdseyeapi
        run: |
          ssh $VENUS_SSH_HOST docker compose -f $VENUS_HOME/birdseyeapi/docker-compose.yml up -d
        env:
          VENUS_SSH_HOST: ${{ secrets.VENUS_SSH_HOST }}
